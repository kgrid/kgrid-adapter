version: 2
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build:
          context: kgrid
      - deploy:
          context: kgrid
          requires:
            - build
jobs:

  ##############
  # Build job uses a go cli tool to create a github release
  ##############
  build:

    docker:
      - image: circleci/openjdk:11-jdk

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-


      #must run install to ensure multi module dependencies(simple-scripts-api) are cached
      - run: mvn -DskipTests clean install dependency:resolve-plugins dependency:go-offline -s .circleci/settings.xml

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      # run build and test
      - run:
         name: Build and Test And Verify
         command: |
            mvn verify -s .circleci/settings.xml


      # save test results
      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/junit/ \;
          when: always

      # If Triggered with Release will prepare and perform maven release
      - run:
          name: Deploy/Release
          command: |
            echo $GPG_SECRET_KEYS | base64 --decode | gpg --import --no-tty --batch --yes
            if [ $RELEASE ]; then
                git config --global user.email "$GIT_USER_EMAIL"
                git config --global user.name "$GIT_USER_NAME"
                mvn release:clean release:prepare --projects $MODULE --batch-mode -DscmCommentPrefix="Release [skip ci] "  -DreleaseVersion=$RELEASE -DdevelopmentVersion=$NEXT release:perform -P ci -s .circleci/settings.xml
            fi

      - store_test_results:
          path: ~/junit

      - store_artifacts:
          path: adapter-api/target
      - store_artifacts:
          path: javascript-adapter/target
      - store_artifacts:
          path:  proxy-adapter/target

      - persist_to_workspace:
          root: . # Persist current working directory
          paths: ./* # Glob. Will persist everything in folder

  deploy:

    docker:
      - image: circleci/openjdk:11.0.1-jdk

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:

      - attach_workspace:
          at: ~/project

      # Run deploy
      - run:
          name: Deploy/Release
          command: |
            echo $GPG_SECRET_KEYS | base64 --decode | gpg --import --no-tty --batch --yes
            mvn clean deploy  -P ci -s .circleci/settings.xml

      # Trigger Builds of Activator so the newest snapshot gets used
      - run:
          name: Trigger Activator to build
          command: |
            curl --request POST \
              --url https://circleci.com/api/v2/project/github/kgrid/kgrid-activator/pipeline \
              --header 'accept: application/json' \
              --header 'content-type: application/json' \
              --header `Circle-Token: $CIRCLECI_TOKEN` \
              --data {"branch":"main"}